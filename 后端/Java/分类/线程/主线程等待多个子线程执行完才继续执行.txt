1.闭锁CountDownLatch
闭锁是典型的等待事件发生的同步工具类，将闭锁的初始值设置为与子线程数目相同，
每个子线程执行完成都调用CountDown()方法，
主线程调用await()方法等待计数值变为零之后恢复继续执行。

2.线程间同步方法
假设有N个子线程，每个子线程执行完成都将一个全局的原子变量加1，
待某个线程将原子变量加到N之后，则利用以下三种方法将主线程唤醒。
  1.互斥信号量Semaphore：主线程申请占用信号量失败阻塞，由子线程释放信号量唤醒。
  2.阻塞队列BlockingQueue：主线程尝试从空队列取东西失败阻塞，由子线程放入东西唤醒。
  3.条件队列：主线程wait/await在内置或显式的条件队列上，由子线程notify/signal唤醒。

3.Future的get()方法
提交子线程到线程池执行的时候维护好所有子线程的Future对象，
主线程中循环调用所有Future对象的get方法等待子线程执行完成并返回结果。

4.CompletionService的take()方法
提交所有子线程到ExecutorCompletionService线程池执行，
主线程通过其take方法等待所有子线程执行完成并返回结果。

5.Thread的join()方法
创建Thread对象并start启动之后维护好所有子线程的Thread对象，
在主线程中循环调用所有子线程这个Thread对象的join方法，
等待所有子线程执行完成。

6.栅栏CyclicBarrier
栅栏是典型的等待所有线程到达同一栅栏位置的同步工具类。
可以在所有子线程的结束位置设置栅栏，
待所有子线程达到栅栏位置后执行指定的Runnable线程，
此方法并不是严格意义的等待所有子线程执行完成后继续执行主线程，而是执行另一个线程。